@using RestaurantOnlineBooking.Services.Data.Interfaces
@using static RestaurantOnlineBookingApp.Infrastructure.Extensions.ClaimsPrincipalsExtensions
@using System.Security.Claims
@model RestaurantDetailsViewModel
@{
    ViewBag.Title = "Restaurant Details";
}
@inject IOwnerService OwnerService
@{
    bool isUserOwnerOfTheRestaurant = await OwnerService.HasRestaurantWithIdAsync(User.GetId(), Model.Id);
    bool isUserOwner = await OwnerService.OwnerExistByIdAsync(User.GetId());
}
<h2 class="text-center">@ViewBag.Title</h2>
<hr />
<div class="container" style="display:inline">
    <div class="row">
        <div class="col-4">
            <!-- Wrap the image inside an anchor tag -->
            <a href="@Model.ImageUrl" target="_blank">
                <img class="card-img-top" style="width: 20rem;" src="@Model.ImageUrl" alt="Restaurant Image">
            </a>
        </div>
        <div class="card col-8 border-0">
            <p style="font-size:25px;"><u>@Model.Name</u></p>
            <p>City: <b>@Model.City</b></p>
            <p>Address: <b>@Model.Address</b></p>  
            <p>Description: <b>@Model.Description</b></p>
            <p>Opening Time: <b>@Model.OpeningTime.ToString(@"hh\:mm")</b></p> @* formated TimeSpan *@
            <p>Closing Time: <b>@Model.ClosingTime.ToString(@"hh\:mm")</b></p>
            <p>Rating: <b>@Model.Rating</b></p>
            <p>Category: <b>@Model.Category</b></p>        
                 
            <div class="card" style="width: 18rem;">
                <div class="card-body">
                    <h5 class="card-title">Owner Info</h5>
                    @if(Model.OwnerInfo.FullName != null)
                    {
                    <p class ="card-text">Full Name: @Model.OwnerInfo.FullName</p>                        
                    }
                    <p class="card-text">Phone Number: @Model.OwnerInfo.PhoneNumber</p>
                    <p class="card-text">Email: @Model.OwnerInfo.Email</p>
                </div>
            </div>
            <div class="form-inline">
                @if (this.User.Identity.IsAuthenticated)
                {
                    if ((isUserOwner && isUserOwnerOfTheRestaurant) || this.User.IsAdmin())
                    {
                        <a class="btn btn-warning" asp-controller="Restaurant" asp-action="Edit"
                           asp-route-id="@Model.Id">Edit</a>
                        <a class="ml-2 btn btn-danger" asp-controller="Restaurant" asp-action="Delete"
                           asp-route-id="@Model.Id">Delete</a>
                    }
                    else
                    {                       
                        <a asp-controller="Review" asp-action="AddReview" asp-route-restaurantId="@Model.Id" class="btn btn-primary">Add Review</a>                        
                    }
                }
                <!-- Show View Menu button -->
                <a asp-controller="Restaurant" asp-action="Menu" asp-route-restaurantId="@Model.Id" class="btn btn-primary">View Menu</a>
                <!-- Show all reviews button -->
                <a asp-controller="Review" asp-action="All" asp-route-restaurantId="@Model.Id" class="btn btn-primary">View All Reviews</a>
                <!-- Show all events button -->
                <a asp-controller="Event" asp-action="AllByRestaurant" asp-route-restaurantId="@Model.Id" class="btn btn-primary">View All Restaurant Events</a>
            </div>           
        </div>
    </div>
</div>